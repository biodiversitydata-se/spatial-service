server.port: 8081

#
# au.org.ala.spatial.service config
#
data:
  dir: '/data/spatial-data'
geoserver:
  url: 'http://localhost:8079/geoserver'
  #url: 'https://spatial.biodiversitydata.se/geoserver'
  username: 'admin'
  password: 'geoserver'
  canDeploy: true
# To use a remote geoserver instance, set geoserver.remote.geoserver_data_dir to the geoserver_data_dir path on the
# remote server. This will cause layer files to be copied to geoserver_data_dir/data/
#  remote:
#    geoserver_data_dir: "/data/geoserver_data_dir"

shpResolutions: [0.5, 0.25, 0.1, 0.05]
grdResolutions: [0.5, 0.25, 0.1, 0.05, 0.01]

biocacheServiceUrl: "https://records.biodiversitydata.se/ws"
biocacheUrl: "https://records.biodiversitydata.se"
openstreetmap:
  url: "https://tile.openstreetmap.org"

slave.enable: true
service.enable: true

batch_sampling_passwords: ""
batch_sampling_points_limit: 1000000
batch_sampling_fields_limit: 1000

---
#
# au.org.ala.spatial.slave config
#
spatialService.url: "http://localhost:8081/ws"
shp2pgsql.path: "/usr/bin/shp2pgsql"
gdal.dir: "/usr/bin/"
gdm.dir: "/data/spatial-data/modelling/gdm/DoGdm"

aloc.xmx: "6G"
aloc.threads: 4
maxent.mx: "1G"
maxent.threads: 4

sampling.threads: 4

slaveKey: ""
serviceKey: ""

api_key:

# time between pushing status updates to the master for a task
statusTime: 3000
retryCount: 10
retryTime: 30000

auth.admin_role: ROLE_ADMIN
app.http.header.userId: X-ALA-userId

headerAndFooter:
  baseURL: "https://static.biodiversitydata.se"
  version: "2"

ala.baseURL: https://biodiversitydata.se
bie.baseURL: https://species.biodiversitydata.se
bie.searchPath: '/search'

records.url: https://archives.ala.org.au/archives/exports/lat_lon_taxon.zip

lists.url: https://lists.biodiversitydata.se
lists.useListWs: false

collections.url: https://collections.biodiversitydata.se
sandboxHubUrl:
sandboxBiocacheServiceUrl:
phyloServiceUrl:

spatialHubUrl: https://spatial.biodiversitydata.se

gazField: ""
userObjectsField: ""

#apiKeyCheckUrlTemplate: "https://auth.biodiversitydata.se/apikey/ws/check?apikey={0}"
spatialService.remote: ""

journalmap.api_key: ""
journalmap.url: https://www.journalmap.org/

# For side by side installation with layers-service, analysis-service
#legacy.workingdir: '/data/ala/data/alaspatial/'

#legacy.enabled: true

#legacy compatability type
#"link" = link legacy files into new locations
#"copy" = copy legacy files into new locations
#"move" = move legacy files into new locations
#legacy.type="link"

#legacy.ANALYSIS_LAYER_FILES_PATH: '/data/ala/data/layers/analysis/'
#legacy.LAYER_FILES_PATH: '/data/ala/data/layers/ready'
#legacy.ALASPATIAL_OUTPUT_PATH: '/data/ala/runtime/output'

grails.plugin.elfinder.rootDir: '/data/spatial-service'

i18n.override.dir: '/data/spatial-service/config/i81n/'


#layers-store config

#Threads created for each batch intersection and each individual shape file
#layers_store.BATCH_THREAD_COUNT: 3

#Set LAYER_INDEX_URL to use REMOVE layer intersections.
#layers_store.LAYER_INDEX_URL: https://spatial.ala.org.au/layers-service

#Use local layer files for sampling or the /intersect/batch service provided by LAYER_INDEX_URL
#layers_store.LOCAL_SAMPLING: false
layers_store.LOCAL_SAMPLING: true

# Set intersect config reload time in ms
#layers_store.CONFIG_RELOAD_WAIT: 12000000

#Comma separated shape file fields to preload, or 'all'
#layers_store.PRELOADED_SHAPE_FILES: all
#layers_store.PRELOADED_SHAPE_FILES: cl22,cl20

# Grid intersection buffer size in bytes.  Must be multiple of 64.
# Only applies to grids > 80MB.
# layers_store.GRID_BUFFER_SIZE=4096
#layers_store.GRID_BUFFER_SIZE: 40960

# Number of GridCacheReader objects to open.
#layers_store.GRID_CACHE_READER_COUNT: 5

# layers_store ingestion
#layers_store.CAN_INGEST_LAYERS: false
#layers_store.CAN_UPDATE_LAYER_DISTANCES: false
#layers_store.CAN_UPDATE_GRID_CACHE: false
#layers_store.CAN_GENERATE_ANALYSIS_FILES: false
#layers_store.CAN_INTERSECT_LAYERS: false
#layers_store.CAN_GENRATE_THUMBNAILS: false

#layers_store.FIELD_STYLES: true

layers_store.GEONETWORK_URL: 'https://spatial.biodiversitydata.se/geonetwork'

distributions.cache.dir: "/data/spatial-service/mapCache/"
distributions.geoserver.image.url: "/ALA/wms?service=WMS&version=1.1.0&request=GetMap&layers=ALA:aus1,ALA:Distributions&styles=&bbox=109,-47,157,-7&srs=EPSG:4326&format=image/png&width=400&height=400&viewparams=s:"

dataSource:
    url: 'jdbc:postgresql://localhost/layersdb'
    #url: 'jdbc:postgresql://postgis/layersdb'
    username: layers
    password: layers

grails.serverURL: http://localhost:8081/ws
grails.app.context: /ws

skin.layout: main
skin.fluidLayout: false
skin.orgNameLong: Swedish Biodiversity Data Infrastructure
skin.orgNameShort: SBDI
skin.favicon: https://static.biodiversitydata.se/favicon.ico
skin.homeUrl: https://tools.biodiversitydata.se

grails.controllers.upload.maxFileSize: 2097152000
grails.controllers.upload.maxRequestSize: 2097152000

# Needed for map exports
google:
  apikey: "AIzaSyAJDtEeoy7Sc9pij2TAoVnmTwA34Q-2VHk"

logging:
  level:
    root: INFO

#userdetails:
#    baseUrl: "https://auth.biodiversitydata.se/userdetails/"
#
## ala-auth-plugin conf
#userDetails:
#    url: "https://auth.biodiversitydata.se/userdetails/"

userdetails:
  web:
    url: "https://auth.biodiversitydata.se/userdetails/"
  api:
    url: "https://auth.biodiversitydata.se/userdetails/"

#
#  CAS SETTINGS
#
#  NOTE: Some of these will be ignored if default_config exists
security:
  cas:
    appServerName: http://localhost:8081
    casServerName: https://auth.biodiversitydata.se
    casServerUrlPrefix: https://auth.biodiversitydata.se/cas
    loginUrl: https://auth.biodiversitydata.se/cas/login
    logoutUrl: https://auth.biodiversitydata.se/cas/logout
    contextPath: '/ws'
    enabled: false
    bypass: false
    disableCAS: false
    gateway: false
  apikey:
    check:
      serviceUrl: "https://auth.biodiversitydata.se/apikey/ws/check?apikey={0}"

  oidc:
    enabled: true
    discoveryUri: https://auth.biodiversitydata.se/cas/oidc/.well-known
    clientId: replace_with_real_value
    secret: replace_with_real_value
    allowUnsignedIdTokens: true
    scope: 'openid profile email ala/attrs ala/roles'
    roleAttribute: ala:role
    logoutAction:
    alaUseridClaim: username
    logoutUrl:
  jwt:
    enabled: false
    #discoveryUri:
    fallbackToLegacyBehaviour: true
    #clientId:
    #roleAttributes: cognito:groups
    #rolesFromAccessToken: true
    #userIdClaim: username
    #roleClaims: cognito:groups
  cors:
    enable: true
    authenticated:
      allowedOrigins:
        - '.*\.biodiversitydata\.se(:[0-9]+)?'
    unauthenticated:
      allowedOrigins:
        - '*'
      allowCredentials: false
  core:
    authCookieName: ALA-Auth
  cookie:
    enabled: false
    domain: '.biodiversitydata.se'

# ApiKey Authoenticator failed while webservice.jwt is supplied
webservice:
  jwt: false
#  jwt-scopes: ala/attrs ala/internal users/read
#  clientId:
#  secret:

#used for spatial-service only
apiKeyCheckUrlTemplate: "https://auth.biodiversitydata.se/apikey/ws/check?apikey={0}"

openapi:
  terms: https://docs.biodiversitydata.se/sbdi-data/sbdi-atlas-terms-of-use/
  contact:
    name:
    email:
  components:
    security:
      oauth2:
        baseUrl: https://auth.biodiversitydata.se/cas/oidc

namematching.url: https://namematching.biodiversitydata.se
